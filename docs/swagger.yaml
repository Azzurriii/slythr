basePath: /api/v1
definitions:
  analysis.AnalyzeRequest:
    properties:
      source_code:
        minLength: 1
        type: string
    required:
    - source_code
    type: object
  testcase_generation.TestCaseGenerateRequest:
    properties:
      source_code:
        minLength: 1
        type: string
      test_framework:
        example: hardhat
        type: string
      test_language:
        example: javascript
        type: string
    required:
    - source_code
    - test_framework
    - test_language
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a server for Slyther Go Backend.
  title: Slyther Go Backend API
  version: "1.0"
paths:
  /contracts/{address}:
    get:
      consumes:
      - application/json
      description: Get a cached smart contract from the database by its address and
        network
      parameters:
      - description: Contract Address
        in: path
        maxLength: 42
        minLength: 42
        name: address
        required: true
        type: string
      - default: ethereum
        description: Network Name
        enum:
        - ethereum
        - polygon
        - bsc
        - base
        - arbitrum
        - avalanche
        - optimism
        - gnosis
        - fantom
        - celo
        in: query
        name: network
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get contract from database
      tags:
      - contracts
  /contracts/{address}/source-code:
    get:
      consumes:
      - application/json
      description: Get the source code of a smart contract from Etherscan by its address
        and save it to the database
      parameters:
      - description: Contract Address
        in: path
        maxLength: 42
        minLength: 42
        name: address
        required: true
        type: string
      - default: ethereum
        description: Network Name
        enum:
        - ethereum
        - polygon
        - bsc
        - base
        - arbitrum
        - avalanche
        - optimism
        - gnosis
        - fantom
        - celo
        in: query
        name: network
        type: string
      produces:
      - application/json
      responses: {}
      summary: Fetch contract source code
      tags:
      - contracts
  /dynamic-analysis:
    post:
      consumes:
      - application/json
      description: Performs dynamic security analysis on Solidity source code using
        AI/LLM
      parameters:
      - description: Contract source code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analysis.AnalyzeRequest'
      produces:
      - application/json
      responses: {}
      summary: Analyze Solidity contract using AI for security vulnerabilities
      tags:
      - dynamic-analysis
  /dynamic-analysis/{sourceHash}:
    get:
      consumes:
      - application/json
      description: Retrieves dynamic analysis result from cache or database using
        source hash
      parameters:
      - description: Source hash
        in: path
        name: sourceHash
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get dynamic analysis result by source hash
      tags:
      - dynamic-analysis
  /static-analysis:
    post:
      consumes:
      - application/json
      description: Performs static security analysis on Solidity source code using
        Slither
      parameters:
      - description: Contract source code
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/analysis.AnalyzeRequest'
      produces:
      - application/json
      responses: {}
      summary: Analyze Solidity contract for security vulnerabilities
      tags:
      - static-analysis
  /static-analysis/{sourceHash}:
    get:
      consumes:
      - application/json
      description: Retrieves static analysis result from cache or database using source
        hash
      parameters:
      - description: Source hash
        in: path
        name: sourceHash
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get static analysis result by source hash
      tags:
      - static-analysis
  /test-cases/{sourceHash}:
    get:
      consumes:
      - application/json
      description: Gets test cases for Solidity contract by source hash
      parameters:
      - description: Source hash
        in: path
        name: sourceHash
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get test cases for Solidity contract
      tags:
      - testcase-generation
  /test-cases/generate:
    post:
      consumes:
      - application/json
      description: Generates test cases for Solidity contract using Gemini AI with
        comprehensive analysis
      parameters:
      - description: Contract source code and test preferences
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/testcase_generation.TestCaseGenerateRequest'
      produces:
      - application/json
      responses: {}
      summary: Generate test cases for Solidity contract
      tags:
      - testcase-generation
schemes:
- http
- https
swagger: "2.0"
